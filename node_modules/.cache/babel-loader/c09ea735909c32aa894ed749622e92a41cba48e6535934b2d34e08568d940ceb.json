{"ast":null,"code":"import { nanoid } from 'nanoid';\nexport default {\n  data() {\n    return {\n      posts: [{\n        id: \"1\",\n        title: 'Making a design system from scratch',\n        theme: 'Design, WEB-Design',\n        body: 'Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat sunt nostrud amet.Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat sunt nostrud amet.',\n        date: '29 Nov 2023'\n      }],\n      id: nanoid(),\n      title: '',\n      body: '',\n      theme: '',\n      date: ''\n    };\n  },\n  methods: {\n    createPost() {\n      function getThisDate() {\n        let date = new Date();\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        let month = months[date.getMonth()];\n        return date.getDate() + ' ' + month + ' ' + date.getFullYear();\n      }\n      const newPost = {\n        id: this.id,\n        title: this.title,\n        theme: this.theme,\n        body: this.body,\n        date: getThisDate()\n      };\n      if (this.theme == \"\" || this.title == \"\" || this.body == \"\") {} else {\n        this.posts.unshift(newPost);\n        this.title = '';\n        this.theme = '';\n        this.date = '';\n        this.body = '';\n        this.id = '';\n      }\n    },\n    inputPostTitle(event) {\n      this.title = event.target.value;\n    },\n    inputPostTheme(event) {\n      this.theme = event.target.value;\n    },\n    inputPostBody(event) {\n      this.body = event.target.value;\n    }\n  }\n};","map":{"version":3,"names":["nanoid","data","posts","id","title","theme","body","date","methods","createPost","getThisDate","Date","months","month","getMonth","getDate","getFullYear","newPost","unshift","inputPostTitle","event","target","value","inputPostTheme","inputPostBody"],"sources":["C:\\Users\\User\\Desktop\\Vue blog\\app\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <header>\n        <h1>FIRST VUE BLOG</h1>\n        <div class=\"alert\">Post must contain title, text and theme</div>\n    </header>\n    <form v-on:submit.prevent=\"onSubmit\" id = \"create_post\">\n        <h3>Create post</h3>\n        <input v-bind:value = \"title\" @input = \"inputPostTitle\" class = \"input_title\" type=\"text\" placeholder = \"Print title here...\">\n        <input v-bind:value = \"theme\" @input = \"inputPostTheme\" type=\"text\" class = \"input_theme\" placeholder = \"Print theme here...\">\n        <textarea v-bind:value = \"body\" @input = \"inputPostBody\" class = \"input_body\" id=\"input_body\" cols=\"30\" rows=\"10\" placeholder=\"Print text here...\"></textarea>\n        <button @click = \"createPost\">Submit</button>\n    </form>\n    <div class=\"post\" v-for = \"post in posts\">\n        <h3 class=\"title\">{{ post.title }}</h3>\n        <div class = \"info\">\n            <span class=\"theme\">{{ post.theme }}</span> | <span class=\"date\">{{ post.date }}</span>\n        </div>\n        <div class = \"body\">{{ post.body }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { nanoid } from 'nanoid'\n  export default {\n    data(){\n        return {\n            posts: [\n                {\n                    id:\"1\", \n                    title:'Making a design system from scratch', \n                    theme: 'Design, WEB-Design', \n                    body:'Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat sunt nostrud amet.Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Exercitation veniam consequat sunt nostrud amet.', \n                    date:'29 Nov 2023'\n                }\n            ],\n            id:nanoid(),\n            title:'',\n            body:'',\n            theme:'',\n            date:'',\n        }\n    },\n    methods: {\n        createPost(){\n            function getThisDate(){\n                let date = new Date();\n                let months = [\n                    'Jan',\n                    'Feb',\n                    'Mar',\n                    'Apr',\n                    'May',\n                    'Jun',\n                    'Jul',\n                    'Aug',\n                    'Sep',\n                    'Oct',\n                    'Nov',\n                    'Dec'\n                ]\n                let month = months[date.getMonth()];\n                return date.getDate() + ' ' + month + ' ' + date.getFullYear();\n            }\n            const newPost = {\n                id:this.id,\n                title: this.title,\n                theme: this.theme,\n                body: this.body,\n                date:getThisDate()\n            }\n\n            if(this.theme == \"\" || this.title == \"\" || this.body == \"\"){\n                \n            }\n            else{\n                this.posts.unshift(newPost);\n                this.title = '';\n                this.theme = '';\n                this.date = '';\n                this.body = '';\n                this.id = '';\n            }\n\n            \n        },\n        inputPostTitle(event){\n            this.title =  event.target.value;\n        },\n        inputPostTheme(event){\n            this.theme = event.target.value;\n        },\n        inputPostBody(event){\n            this.body = event.target.value;\n        }\n    }\n  }\n</script>\n\n<style>\n    @font-face {\n        font-family: 'Roboto bold';\n        src: url('../public/fonts/Roboto/Roboto-Bold.ttf');\n    }\n\n    @font-face {\n        font-family: 'Roboto regular';\n        src: url('../public/fonts/Roboto/Roboto-Regular.ttf');\n    }\n\n    @font-face {\n        font-family: 'Roboto medium';\n        src: url('../public/fonts/Roboto/Roboto-Medium.ttf');\n    }\n\n    * {\n      margin: 0;\n      outline: 0;\n      box-sizing: border-box;\n    }\n    \n    body {\n     -webkit-font-smoothing: antialiased;\n     padding-bottom: 10px;\n     min-width: 600px;\n    }\n    \n    \n    button {\n     cursor: pointer;\n     height: 30px;\n     font-size: 18px;\n    }\n\n    *::-webkit-scrollbar{\n       background-color:transparent;\n    }\n\n    *::-webkit-scrollbar-thumb{\n        border-radius: 10px;\n        background-color: grey;\n        border: 5px solid transparent;\n        background-clip: content-box;\n    }\n\n    *::selection{\n        background-color:rgb(245, 49, 49);\n        color:white;\n    }\n\n    header{\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n        width: 80vw;\n        height: 100px;\n        margin-bottom:15px;\n       border-bottom: solid rgb(245, 49, 49) 1px;\n    }\n\n    h1, h2, h3, h4{\n        font-family: 'Roboto bold';\n    }\n\n    .app{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n    }\n\n    form{\n        display:flex;\n        flex-direction:column;\n        \n    }\n\n    .post{\n        width: 600px;\n        margin-top:15px;\n        border-bottom: 1px solid #cfcdcd;\n        padding-bottom:15px;\n    }\n\n    .post > *{\n        text-indent: 10px;\n        margin-top: 5px;\n    }\n\n    .title{\n        font-family: 'Roboto bold';\n    }\n\n    .theme{\n        font-weight:500;\n        font-family: 'Roboto medium';\n    }\n\n    .date{\n        font-weight: 500;\n        font-family: 'Roboto medium';\n    }\n\n    .body{\n        font-family:'Roboto regular';\n    }\n\n    input{\n        margin-top: 15px;\n        border-radius:10px;\n        width: 500px;\n        height: 50px;\n        border:1px solid grey;\n        font-size:18px;\n        font-family: 'Roboto regular';\n        padding: 15px;\n    }\n\n    .input_body{\n        margin-top: 15px;\n        border-radius:10px;\n        width: 500px;\n        height: 100px;\n        border:1px solid grey;\n        font-size:18px;\n        font-family: 'Roboto regular';\n        padding: 15px;\n        resize: none;\n        overflow-y:scroll;\n    }\n\n    .input_body:focus{\n        outline:rgb(245, 49, 49);\n        border-color: rgb(245, 49, 49);\n    }\n\n    .input_body:focus::-webkit-input-placeholder \n    {\n        color: transparent;\n    }\n\n    button{\n        font-family: 'Roboto regular';\n        width: 100px;\n        align-self:flex-end;\n        margin-top:15px;\n        border-radius: 5px;\n        border: 1px solid grey;\n        background:none;\n        cursor:pointer;\n    }\n\n    button:hover{\n        background-color: rgb(245, 49, 49);\n        border-color:rgb(245, 49, 49);\n        color:white;\n    }\n\n    input:focus{\n        outline:rgb(245, 49, 49);\n        border-color: rgb(245, 49, 49);\n    }\n\n    input:focus::-webkit-input-placeholder \n    {\n        color: transparent;\n    }\n\n    .alert{\n        position: fixed;\n        top:0;\n        background-color: rgb(245, 49, 49);\n        color:white;\n        font-family: 'Roboto medium';\n        padding: 25px;\n        border-radius: 10px;\n        font-size: 36px;\n    }\n\n    @media screen and (max-width:1000px){\n\n        h1{\n            font-size: 48px;\n        }\n\n        h3{\n            font-size: 36px;\n        }\n\n        header{\n            border-width: 3px;\n        }\n\n        .post{\n            width: 90vw;\n            border-width: 3px;\n            font-size: larger;\n        }\n\n        button{\n            align-self: center;\n            background-color: rgb(245, 49, 49);\n            color:white;\n            width: 40vw;\n            height: 100px;\n            font-size:36px;\n            border-radius: 25px;\n            margin-top: 50px;\n            border:none;\n        }\n\n        input{\n            font-size: 36px;\n            width: 90vw;\n            height: 100px;\n            border-width: 3px;\n        }\n\n        .input_body{\n            font-size:36px;\n            width: 90vw;\n            height: 300px;\n            border-width: 3px;\n        }\n\n        .input_body::-webkit-input-placeholder \n        {\n            font-size:36px\n        }\n    }\n</style>"],"mappings":"AAwBE,SAASA,MAAK,QAAS,QAAO;AAC9B,eAAe;EACbC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,KAAK,EAAE,CACH;QACIC,EAAE,EAAC,GAAG;QACNC,KAAK,EAAC,qCAAqC;QAC3CC,KAAK,EAAE,oBAAoB;QAC3BC,IAAI,EAAC,sVAAsV;QAC3VC,IAAI,EAAC;MACT,EACH;MACDJ,EAAE,EAACH,MAAM,CAAC,CAAC;MACXI,KAAK,EAAC,EAAE;MACRE,IAAI,EAAC,EAAE;MACPD,KAAK,EAAC,EAAE;MACRE,IAAI,EAAC;IACT;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAAA,EAAE;MACR,SAASC,WAAWA,CAAA,EAAE;QAClB,IAAIH,IAAG,GAAI,IAAII,IAAI,CAAC,CAAC;QACrB,IAAIC,MAAK,GAAI,CACT,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAI,CACR;QACA,IAAIC,KAAI,GAAID,MAAM,CAACL,IAAI,CAACO,QAAQ,CAAC,CAAC,CAAC;QACnC,OAAOP,IAAI,CAACQ,OAAO,CAAC,IAAI,GAAE,GAAIF,KAAI,GAAI,GAAE,GAAIN,IAAI,CAACS,WAAW,CAAC,CAAC;MAClE;MACA,MAAMC,OAAM,GAAI;QACZd,EAAE,EAAC,IAAI,CAACA,EAAE;QACVC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,IAAI,EAACG,WAAW,CAAC;MACrB;MAEA,IAAG,IAAI,CAACL,KAAI,IAAK,EAAC,IAAK,IAAI,CAACD,KAAI,IAAK,EAAC,IAAK,IAAI,CAACE,IAAG,IAAK,EAAE,EAAC,CAE3D,OACI;QACA,IAAI,CAACJ,KAAK,CAACgB,OAAO,CAACD,OAAO,CAAC;QAC3B,IAAI,CAACb,KAAI,GAAI,EAAE;QACf,IAAI,CAACC,KAAI,GAAI,EAAE;QACf,IAAI,CAACE,IAAG,GAAI,EAAE;QACd,IAAI,CAACD,IAAG,GAAI,EAAE;QACd,IAAI,CAACH,EAAC,GAAI,EAAE;MAChB;IAGJ,CAAC;IACDgB,cAAcA,CAACC,KAAK,EAAC;MACjB,IAAI,CAAChB,KAAI,GAAKgB,KAAK,CAACC,MAAM,CAACC,KAAK;IACpC,CAAC;IACDC,cAAcA,CAACH,KAAK,EAAC;MACjB,IAAI,CAACf,KAAI,GAAIe,KAAK,CAACC,MAAM,CAACC,KAAK;IACnC,CAAC;IACDE,aAAaA,CAACJ,KAAK,EAAC;MAChB,IAAI,CAACd,IAAG,GAAIc,KAAK,CAACC,MAAM,CAACC,KAAK;IAClC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}