{"ast":null,"code":"import { nanoid } from 'nanoid';\nexport default {\n  data() {\n    return {\n      posts: [],\n      id: nanoid(),\n      title: '',\n      body: '',\n      theme: '',\n      date: '',\n      show: false,\n      showMessage: true\n    };\n  },\n  mounted() {\n    let templatePosts = document.querySelectorAll('.post');\n    if (localStorage.length > 0) {\n      this.showMessage = false;\n    }\n    for (let i = 0; i < localStorage.length; i++) {\n      let key = localStorage.key(i);\n      let storedPost = JSON.parse(localStorage.getItem(key));\n      this.posts.unshift(storedPost);\n      templatePosts[i].id = JSON.parse(localStorage.getItem(key).id);\n    }\n  },\n  methods: {\n    createPost() {\n      function getThisDate() {\n        let date = new Date();\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        let month = months[date.getMonth()];\n        return date.getDate() + ' ' + month + ' ' + date.getFullYear();\n      }\n      const newPost = {\n        id: this.id,\n        title: this.title,\n        theme: this.theme,\n        body: this.body,\n        date: getThisDate()\n      };\n      if (this.theme == \"\" || this.title == \"\" || this.body == \"\") {\n        this.show = !this.show;\n      } else {\n        this.posts.unshift(newPost);\n        localStorage.setItem(this.id, JSON.stringify(newPost));\n        this.showMessage = false;\n        for (let i = 0; i < localStorage.length; i++) {\n          let key = localStorage.key(i);\n          let storedPost = JSON.parse(localStorage.getItem(key));\n          templatePosts[i].id = JSON.parse(localStorage.getItem(key).id);\n        }\n        this.title = '';\n        this.theme = '';\n        this.date = '';\n        this.body = '';\n        this.id = '';\n      }\n    },\n    inputPostTitle(event) {\n      this.title = event.target.value;\n    },\n    inputPostTheme(event) {\n      this.theme = event.target.value;\n    },\n    inputPostBody(event) {\n      this.body = event.target.value;\n    },\n    removeItem() {}\n  }\n};","map":{"version":3,"names":["nanoid","data","posts","id","title","body","theme","date","show","showMessage","mounted","templatePosts","document","querySelectorAll","localStorage","length","i","key","storedPost","JSON","parse","getItem","unshift","methods","createPost","getThisDate","Date","months","month","getMonth","getDate","getFullYear","newPost","setItem","stringify","inputPostTitle","event","target","value","inputPostTheme","inputPostBody","removeItem"],"sources":["C:\\Users\\User\\Desktop\\Vue blog\\app\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app\" @click = \"show = false\">\n    <header>\n        <h1>FIRST VUE BLOG</h1>\n        <transition name = \"fade\">\n            <div v-if = \"show\" class=\"alert\">Post must contain title, text and theme</div>\n        </transition>\n    </header>\n    <form v-on:submit.prevent=\"onSubmit\" id = \"create_post\">\n        <h3>Create post</h3>\n        <input v-bind:value = \"title\" @input = \"inputPostTitle\" class = \"input_title\" type=\"text\" maxlength=\"50\" placeholder = \"Print title here...\">\n        <input v-bind:value = \"theme\" @input = \"inputPostTheme\" type=\"text\" maxlength=\"20\" class = \"input_theme\" placeholder = \"Print theme here...\">\n        <textarea v-bind:value = \"body\" @input = \"inputPostBody\" class = \"input_body\" id=\"input_body\" maxlength=\"500\" cols=\"30\" rows=\"10\" placeholder=\"Print text here...\"></textarea>\n        <button @click = \"createPost\" v-on:click.stop=\"doThis\">Submit</button>\n    </form>\n    <div class=\"welcome_message\" v-if = \"showMessage\">\n        There are no posts here yet\n    </div>\n    <div class=\"post\" v-for = \"post in posts\">\n        <h3 class=\"title\">{{ post.title }}</h3>\n        <div class = \"info\">\n            <span class=\"theme\">{{ post.theme }}</span> | <span class=\"date\">{{ post.date }}</span>\n        </div>\n        <div class = \"body\">{{ post.body }}</div>\n        <button @click = \"removeItem\" class = \"deleteButton\">delete</button>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { nanoid } from 'nanoid'\n  export default {\n    data(){\n        return {\n            posts: [],\n            id:nanoid(),\n            title:'',\n            body:'',\n            theme:'',\n            date:'',\n            show:false,\n            showMessage:true\n        }\n    },\n\n    mounted(){\n        let templatePosts = document.querySelectorAll('.post');\n\n        if(localStorage.length > 0){\n            this.showMessage = false;\n        }\n\n        for(let i = 0; i < localStorage.length; i++){\n            let key = localStorage.key(i);\n            let storedPost = JSON.parse(localStorage.getItem(key));\n\n            this.posts.unshift(storedPost);\n            templatePosts[i].id = JSON.parse(localStorage.getItem(key).id);\n        }\n    },\n\n    methods: {\n        createPost(){\n            function getThisDate(){\n                let date = new Date();\n                let months = [\n                    'Jan',\n                    'Feb',\n                    'Mar',\n                    'Apr',\n                    'May',\n                    'Jun',\n                    'Jul',\n                    'Aug',\n                    'Sep',\n                    'Oct',\n                    'Nov',\n                    'Dec'\n                ]\n                let month = months[date.getMonth()];\n                return date.getDate() + ' ' + month + ' ' + date.getFullYear();\n            }\n            \n            const newPost = {\n                id:this.id,\n                title: this.title,\n                theme: this.theme,\n                body: this.body,\n                date:getThisDate()\n            }\n\n            if(this.theme == \"\" || this.title == \"\" || this.body == \"\"){\n                this.show = !this.show;\n            }\n            else{\n                \n                this.posts.unshift(newPost);\n                localStorage.setItem(this.id, JSON.stringify(newPost));\n                this.showMessage = false;\n                for(let i = 0; i < localStorage.length; i++){\n                    let key = localStorage.key(i);\n                    let storedPost = JSON.parse(localStorage.getItem(key));\n                    templatePosts[i].id = JSON.parse(localStorage.getItem(key).id);\n                }\n                this.title = '';\n                this.theme = '';\n                this.date = '';\n                this.body = '';\n                this.id = '';\n            }\n            \n        },\n\n        inputPostTitle(event){\n            this.title =  event.target.value;\n        },\n\n        inputPostTheme(event){\n            this.theme = event.target.value;\n        },\n\n        inputPostBody(event){\n            this.body = event.target.value;\n        },\n\n        removeItem(){\n\n        }\n    }\n  }\n</script>\n\n<style>\n    @font-face {\n        font-family: 'Roboto bold';\n        src: url('../public/fonts/Roboto/Roboto-Bold.ttf');\n    }\n\n    @font-face {\n        font-family: 'Roboto regular';\n        src: url('../public/fonts/Roboto/Roboto-Regular.ttf');\n    }\n\n    @font-face {\n        font-family: 'Roboto medium';\n        src: url('../public/fonts/Roboto/Roboto-Medium.ttf');\n    }\n\n    * {\n      margin: 0;\n      outline: 0;\n      box-sizing: border-box;\n    }\n    \n    body {\n     -webkit-font-smoothing: antialiased;\n     padding-bottom: 10px;\n     min-width: 600px;\n    }\n    \n    \n    button {\n     cursor: pointer;\n     height: 30px;\n     font-size: 18px;\n    }\n\n    *::-webkit-scrollbar{\n       background-color:transparent;\n    }\n\n    *::-webkit-scrollbar-thumb{\n        border-radius: 10px;\n        background-color: grey;\n        border: 5px solid transparent;\n        background-clip: content-box;\n    }\n\n    *::selection{\n        background-color:rgb(245, 49, 49);\n        color:white;\n    }\n\n    header{\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n        width: 80vw;\n        height: 100px;\n        margin-bottom:15px;\n       border-bottom: solid rgb(245, 49, 49) 1px;\n    }\n\n    h1, h2, h3, h4{\n        font-family: 'Roboto bold';\n    }\n\n    .app{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n    }\n\n    form{\n        display:flex;\n        flex-direction:column;\n        border-bottom: 1px solid #cfcdcd;\n        padding-bottom:15px;\n    }\n\n    .post{\n        width: 600px;\n        margin-top:15px;\n        border-bottom: 1px solid #cfcdcd;\n        padding-bottom:15px;\n    }\n\n    .post > *{\n        text-indent: 10px;\n        margin-top: 5px;\n        word-wrap: break-word;\n    }\n\n    .title{\n        font-family: 'Roboto bold';\n    }\n\n    .theme{\n        font-weight:500;\n        font-family: 'Roboto medium';\n    }\n\n    .date{\n        font-weight: 500;\n        font-family: 'Roboto medium';\n    }\n\n    .body{\n        font-family:'Roboto regular';\n    }\n\n    input{\n        margin-top: 15px;\n        border-radius:10px;\n        width: 500px;\n        height: 50px;\n        border:1px solid grey;\n        font-size:18px;\n        font-family: 'Roboto regular';\n        padding: 15px;\n    }\n\n    .input_body{\n        margin-top: 15px;\n        border-radius:10px;\n        width: 500px;\n        height: 100px;\n        border:1px solid grey;\n        font-size:18px;\n        font-family: 'Roboto regular';\n        padding: 15px;\n        resize: none;\n        overflow-y:scroll;\n    }\n\n    .input_body:focus{\n        outline:rgb(245, 49, 49);\n        border-color: rgb(245, 49, 49);\n    }\n\n    .input_body:focus::-webkit-input-placeholder \n    {\n        color: transparent;\n    }\n\n    button{\n        font-family: 'Roboto regular';\n        width: 100px;\n        align-self:flex-end;\n        margin-top:15px;\n        border-radius: 5px;\n        border: 1px solid grey;\n        background:none;\n        cursor:pointer;\n    }\n\n    .welcome_message{\n        margin-top:10px;\n        color:grey;\n        font-family: 'Roboto regular';\n    }\n\n    button:hover{\n        background-color: rgb(245, 49, 49);\n        border-color:rgb(245, 49, 49);\n        color:white;\n    }\n\n    input:focus{\n        outline:rgb(245, 49, 49);\n        border-color: rgb(245, 49, 49);\n    }\n\n    input:focus::-webkit-input-placeholder \n    {\n        color: transparent;\n    }\n\n    .alert{\n        position:fixed;\n        background-color: rgb(245, 49, 49);\n        color:white;\n        font-family: 'Roboto medium';\n        padding: 25px;\n        border-radius: 10px;\n        font-size: 18px;\n    }\n\n    .fade-enter-active,\n    .fade-leave-active {\n        transition: opacity 0.5s ease;\n    }\n\n    .fade-enter-from,\n    .fade-leave-to {\n      opacity: 0;\n    }\n\n    @media screen and (max-width:1000px){\n\n        h1{\n            font-size: 48px;\n        }\n\n        h3{\n            font-size: 36px;\n        }\n\n        header{\n            border-width: 3px;\n        }\n\n        .post{\n            width: 90vw;\n            border-width: 3px;\n            font-size: larger;\n        }\n\n        button{\n            align-self: center;\n            background-color: rgb(245, 49, 49);\n            color:white;\n            width: 40vw;\n            height: 100px;\n            font-size:36px;\n            border-radius: 25px;\n            margin-top: 50px;\n            border:none;\n        }\n\n        input{\n            font-size: 36px;\n            width: 90vw;\n            height: 100px;\n            border-width: 3px;\n        }\n\n        .input_body{\n            font-size:36px;\n            width: 90vw;\n            height: 300px;\n            border-width: 3px;\n        }\n\n        .input_body::-webkit-input-placeholder \n        {\n            font-size:36px\n        }\n        \n        .alert{\n            font-size: 36px;\n        }\n\n        form{\n            border-width:3px;\n        }\n    }\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}