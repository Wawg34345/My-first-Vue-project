{"ast":null,"code":"import { nanoid } from 'nanoid';\nexport default {\n  data() {\n    return {\n      posts: [],\n      id: nanoid(),\n      title: '',\n      body: '',\n      theme: '',\n      date: '',\n      show: false,\n      showMessage: true\n    };\n  },\n  mounted() {\n    if (localStorage.length > 0) {\n      this.showMessage = false;\n    }\n    for (let i = 0; i < localStorage.length; i++) {\n      let key = localStorage.key(i);\n      let storedPost = JSON.parse(localStorage.getItem(key));\n      this.posts.unshift(storedPost);\n    }\n  },\n  methods: {\n    createPost() {\n      function getThisDate() {\n        let date = new Date();\n        let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        let month = months[date.getMonth()];\n        return date.getDate() + ' ' + month + ' ' + date.getFullYear();\n      }\n      const newPost = {\n        id: this.id,\n        title: this.title,\n        theme: this.theme,\n        body: this.body,\n        date: getThisDate()\n      };\n      if (this.theme == \"\" || this.title == \"\" || this.body == \"\") {\n        this.show = !this.show;\n      } else {\n        this.posts.unshift(newPost);\n        localStorage.setItem(this.id, JSON.stringify(newPost));\n        this.showMessage = false;\n        this.title = '';\n        this.theme = '';\n        this.date = '';\n        this.body = '';\n        this.id = '';\n      }\n    },\n    inputPostTitle(event) {\n      this.title = event.target.value;\n    },\n    inputPostTheme(event) {\n      this.theme = event.target.value;\n    },\n    inputPostBody(event) {\n      this.body = event.target.value;\n    },\n    removeItem(event) {\n      console.log(event.target.parent.id);\n    }\n  }\n};","map":{"version":3,"names":["nanoid","data","posts","id","title","body","theme","date","show","showMessage","mounted","localStorage","length","i","key","storedPost","JSON","parse","getItem","unshift","methods","createPost","getThisDate","Date","months","month","getMonth","getDate","getFullYear","newPost","setItem","stringify","inputPostTitle","event","target","value","inputPostTheme","inputPostBody","removeItem","console","log","parent"],"sources":["C:\\Users\\User\\Desktop\\Vue blog\\app\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app\" @click = \"show = false\">\r\n    <header>\r\n        <h1>FIRST VUE BLOG ver.1</h1>\r\n        <transition name = \"fade\">\r\n            <div v-if = \"show\" class=\"alert\">Post must contain title, text and theme</div>\r\n        </transition>\r\n    </header>\r\n    <form v-on:submit.prevent=\"onSubmit\" id = \"create_post\">\r\n        <h3>Create post</h3>\r\n        <input v-bind:value = \"title\" @input = \"inputPostTitle\" class = \"input_title\" type=\"text\" maxlength=\"50\" placeholder = \"Print title here...\">\r\n        <input v-bind:value = \"theme\" @input = \"inputPostTheme\" type=\"text\" maxlength=\"20\" class = \"input_theme\" placeholder = \"Print theme here...\">\r\n        <textarea v-bind:value = \"body\" @input = \"inputPostBody\" class = \"input_body\" id=\"input_body\" maxlength=\"500\" cols=\"30\" rows=\"10\" placeholder=\"Print text here...\"></textarea>\r\n        <button @click = \"createPost\" v-on:click.stop=\"doThis\">Submit</button>\r\n    </form>\r\n    <div class=\"welcome_message\" v-if = \"showMessage\">\r\n        There are no posts here yet\r\n    </div>\r\n    <div class=\"post\" :id=\"post.id\" v-for = \"post in posts\">\r\n        <h3 class=\"title\">{{ post.title }}</h3>\r\n        <div class = \"info\">\r\n            <span class=\"theme\">{{ post.theme }}</span> | <span class=\"date\">{{ post.date }}</span>\r\n        </div>\r\n        <div class = \"body\">{{ post.body }}</div>\r\n        <button @click.self = \"removeItem\" class = \"deleteButton\">delete</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { nanoid } from 'nanoid'\r\n  export default {\r\n    data(){\r\n        return {\r\n            posts: [],\r\n            id:nanoid(),\r\n            title:'',\r\n            body:'',\r\n            theme:'',\r\n            date:'',\r\n            show:false,\r\n            showMessage:true,\r\n        }\r\n    },\r\n\r\n    mounted(){\r\n        if(localStorage.length > 0){\r\n            this.showMessage = false;\r\n        }\r\n\r\n        for(let i = 0; i < localStorage.length; i++){\r\n            let key = localStorage.key(i);\r\n            let storedPost = JSON.parse(localStorage.getItem(key));\r\n            this.posts.unshift(storedPost);\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        createPost(){\r\n            function getThisDate(){\r\n                let date = new Date();\r\n                let months = [\r\n                    'Jan',\r\n                    'Feb',\r\n                    'Mar',\r\n                    'Apr',\r\n                    'May',\r\n                    'Jun',\r\n                    'Jul',\r\n                    'Aug',\r\n                    'Sep',\r\n                    'Oct',\r\n                    'Nov',\r\n                    'Dec'\r\n                ]\r\n                let month = months[date.getMonth()];\r\n                return date.getDate() + ' ' + month + ' ' + date.getFullYear();\r\n            }\r\n            \r\n            const newPost = {\r\n                id:this.id,\r\n                title: this.title,\r\n                theme: this.theme,\r\n                body: this.body,\r\n                date:getThisDate()\r\n            }\r\n\r\n            if(this.theme == \"\" || this.title == \"\" || this.body == \"\"){\r\n                this.show = !this.show;\r\n            }\r\n            else{\r\n                this.posts.unshift(newPost);\r\n                localStorage.setItem(this.id, JSON.stringify(newPost));\r\n                this.showMessage = false;\r\n                this.title = '';\r\n                this.theme = '';\r\n                this.date = '';\r\n                this.body = '';\r\n                this.id = '';\r\n            }\r\n        },\r\n\r\n        inputPostTitle(event){\r\n            this.title =  event.target.value;\r\n        },\r\n\r\n        inputPostTheme(event){\r\n            this.theme = event.target.value;\r\n        },\r\n\r\n        inputPostBody(event){\r\n            this.body = event.target.value;\r\n        },\r\n\r\n        removeItem(event){\r\n            console.log(event.target.parent.id);\r\n        }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n    @font-face {\r\n        font-family: 'Roboto bold';\r\n        src: url('../public/fonts/Roboto/Roboto-Bold.ttf');\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Roboto regular';\r\n        src: url('../public/fonts/Roboto/Roboto-Regular.ttf');\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Roboto medium';\r\n        src: url('../public/fonts/Roboto/Roboto-Medium.ttf');\r\n    }\r\n\r\n    * {\r\n      margin: 0;\r\n      outline: 0;\r\n      box-sizing: border-box;\r\n    }\r\n    \r\n    body {\r\n     -webkit-font-smoothing: antialiased;\r\n     padding-bottom: 10px;\r\n     min-width: 600px;\r\n    }\r\n    \r\n    \r\n    button {\r\n     cursor: pointer;\r\n     height: 30px;\r\n     font-size: 18px;\r\n    }\r\n\r\n    *::-webkit-scrollbar{\r\n       background-color:transparent;\r\n    }\r\n\r\n    *::-webkit-scrollbar-thumb{\r\n        border-radius: 10px;\r\n        background-color: grey;\r\n        border: 5px solid transparent;\r\n        background-clip: content-box;\r\n    }\r\n\r\n    *::selection{\r\n        background-color:rgb(245, 49, 49);\r\n        color:white;\r\n    }\r\n\r\n    header{\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n        width: 80vw;\r\n        height: 100px;\r\n        margin-bottom:15px;\r\n       border-bottom: solid rgb(245, 49, 49) 1px;\r\n    }\r\n\r\n    h1, h2, h3, h4{\r\n        font-family: 'Roboto bold';\r\n    }\r\n\r\n    .app{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    form{\r\n        display:flex;\r\n        flex-direction:column;\r\n        border-bottom: 1px solid #cfcdcd;\r\n        padding-bottom:15px;\r\n    }\r\n\r\n    .post{\r\n        width: 600px;\r\n        margin-top:15px;\r\n        border-bottom: 1px solid #cfcdcd;\r\n        padding-bottom:15px;\r\n    }\r\n\r\n    .post > *{\r\n        text-indent: 10px;\r\n        margin-top: 5px;\r\n        word-wrap: break-word;\r\n    }\r\n\r\n    .title{\r\n        font-family: 'Roboto bold';\r\n    }\r\n\r\n    .theme{\r\n        font-weight:500;\r\n        font-family: 'Roboto medium';\r\n    }\r\n\r\n    .date{\r\n        font-weight: 500;\r\n        font-family: 'Roboto medium';\r\n    }\r\n\r\n    .body{\r\n        font-family:'Roboto regular';\r\n    }\r\n\r\n    input{\r\n        margin-top: 15px;\r\n        border-radius:10px;\r\n        width: 500px;\r\n        height: 50px;\r\n        border:1px solid grey;\r\n        font-size:18px;\r\n        font-family: 'Roboto regular';\r\n        padding: 15px;\r\n    }\r\n\r\n    .input_body{\r\n        margin-top: 15px;\r\n        border-radius:10px;\r\n        width: 500px;\r\n        height: 100px;\r\n        border:1px solid grey;\r\n        font-size:18px;\r\n        font-family: 'Roboto regular';\r\n        padding: 15px;\r\n        resize: none;\r\n        overflow-y:scroll;\r\n    }\r\n\r\n    .input_body:focus{\r\n        outline:rgb(245, 49, 49);\r\n        border-color: rgb(245, 49, 49);\r\n    }\r\n\r\n    .input_body:focus::-webkit-input-placeholder \r\n    {\r\n        color: transparent;\r\n    }\r\n\r\n    button{\r\n        font-family: 'Roboto regular';\r\n        width: 100px;\r\n        align-self:flex-end;\r\n        margin-top:15px;\r\n        border-radius: 5px;\r\n        border: 1px solid grey;\r\n        background:none;\r\n        cursor:pointer;\r\n    }\r\n\r\n    .welcome_message{\r\n        margin-top:10px;\r\n        color:grey;\r\n        font-family: 'Roboto regular';\r\n    }\r\n\r\n    button:hover{\r\n        background-color: rgb(245, 49, 49);\r\n        border-color:rgb(245, 49, 49);\r\n        color:white;\r\n    }\r\n\r\n    input:focus{\r\n        outline:rgb(245, 49, 49);\r\n        border-color: rgb(245, 49, 49);\r\n    }\r\n\r\n    input:focus::-webkit-input-placeholder \r\n    {\r\n        color: transparent;\r\n    }\r\n\r\n    .alert{\r\n        position:fixed;\r\n        background-color: rgb(245, 49, 49);\r\n        color:white;\r\n        font-family: 'Roboto medium';\r\n        padding: 25px;\r\n        border-radius: 10px;\r\n        font-size: 18px;\r\n    }\r\n\r\n    .fade-enter-active,\r\n    .fade-leave-active {\r\n        transition: opacity 0.5s ease;\r\n    }\r\n\r\n    .fade-enter-from,\r\n    .fade-leave-to {\r\n      opacity: 0;\r\n    }\r\n\r\n    @media screen and (orientation: portrait){\r\n\r\n        h1{\r\n            font-size: 48px;\r\n        }\r\n\r\n        h3{\r\n            font-size: 36px;\r\n        }\r\n\r\n        header{\r\n            border-width: 3px;\r\n        }\r\n\r\n        .post{\r\n            width: 90vw;\r\n            border-width: 3px;\r\n            font-size: larger;\r\n        }\r\n\r\n        button{\r\n            align-self: center;\r\n            background-color: rgb(245, 49, 49);\r\n            color:white;\r\n            width: 40vw;\r\n            height: 100px;\r\n            font-size:36px;\r\n            border-radius: 25px;\r\n            margin-top: 50px;\r\n            border:none;\r\n        }\r\n\r\n        input{\r\n            font-size: 36px;\r\n            width: 90vw;\r\n            height: 100px;\r\n            border-width: 3px;\r\n        }\r\n\r\n        .input_body{\r\n            font-size:36px;\r\n            width: 90vw;\r\n            height: 300px;\r\n            border-width: 3px;\r\n        }\r\n\r\n        .input_body::-webkit-input-placeholder \r\n        {\r\n            font-size:36px\r\n        }\r\n        \r\n        .alert{\r\n            font-size: 36px;\r\n        }\r\n\r\n        form{\r\n            border-width:3px;\r\n        }\r\n\r\n        .welcome_message{\r\n            font-size:48px;\r\n            margin-top:24px;\r\n        }\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}